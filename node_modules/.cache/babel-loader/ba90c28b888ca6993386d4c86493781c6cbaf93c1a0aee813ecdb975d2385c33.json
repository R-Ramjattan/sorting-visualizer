{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juni Ramjattan\\\\Desktop\\\\githubIO\\\\demo0one\\\\src\\\\SortingVisualizer\\\\SortingVisualizer.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n  componentDidMount() {\n    this.generateArray();\n  }\n\n  //Create values for array upon mounting component\n  generateArray() {\n    const array = [];\n    for (let i = 0; i < 20; i++) {\n      //RandomIntFromInterval(min,max)\n      array.push(randomNumberInRange(10, 1000));\n    }\n    this.setState({\n      array\n    });\n  }\n  // For each value in the array map it to a div-array-bar with a key id\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-container\",\n        children: array.map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"array-bar\",\n          style: {\n            height: '${value}px'\n          },\n          children: value\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n}\nfunction randomNumberInRange(min, max) {\n  // üëáÔ∏è get number between min (inclusive) and max (inclusive)\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}","map":{"version":3,"names":["React","SortingVisualizer","Component","constructor","props","state","array","componentDidMount","generateArray","i","push","randomNumberInRange","setState","render","map","value","idx","height","min","max","Math","floor","random"],"sources":["C:/Users/Juni Ramjattan/Desktop/githubIO/demo0one/src/SortingVisualizer/SortingVisualizer.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nexport default class SortingVisualizer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: [],\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.generateArray();\r\n    }\r\n\r\n    //Create values for array upon mounting component\r\n    generateArray(){\r\n        const array = [];\r\n        for(let i=0; i< 20; i++){\r\n            //RandomIntFromInterval(min,max)\r\n            array.push(randomNumberInRange(10,1000));\r\n        }\r\n        this.setState({array});\r\n    }\r\n    // For each value in the array map it to a div-array-bar with a key id\r\n    render(){\r\n        const {array} = this.state;\r\n        \r\n        return(\r\n            <>\r\n            <div className='array-container'>\r\n            {array.map((value, idx) => (\r\n                \r\n                <div className='array-bar' style={{height: '${value}px'}} key={idx}>\r\n                    {value}\r\n                </div>\r\n                \r\n            ))}\r\n            </div>\r\n            </>\r\n        );\r\n       \r\n    }\r\n \r\n}\r\nfunction randomNumberInRange(min, max) {\r\n    // üëáÔ∏è get number between min (inclusive) and max (inclusive)\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAAA;AAEzB,eAAe,MAAMC,iBAAiB,SAASD,KAAK,CAACE,SAAS;EAC1DC,WAAW,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE;IACX,CAAC;EACL;EACAC,iBAAiB,GAAE;IACf,IAAI,CAACC,aAAa,EAAE;EACxB;;EAEA;EACAA,aAAa,GAAE;IACX,MAAMF,KAAK,GAAG,EAAE;IAChB,KAAI,IAAIG,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAE,EAAE,EAAEA,CAAC,EAAE,EAAC;MACpB;MACAH,KAAK,CAACI,IAAI,CAACC,mBAAmB,CAAC,EAAE,EAAC,IAAI,CAAC,CAAC;IAC5C;IACA,IAAI,CAACC,QAAQ,CAAC;MAACN;IAAK,CAAC,CAAC;EAC1B;EACA;EACAO,MAAM,GAAE;IACJ,MAAM;MAACP;IAAK,CAAC,GAAG,IAAI,CAACD,KAAK;IAE1B,oBACI;MAAA,uBACA;QAAK,SAAS,EAAC,iBAAiB;QAAA,UAC/BC,KAAK,CAACQ,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBAElB;UAAK,SAAS,EAAC,WAAW;UAAC,KAAK,EAAE;YAACC,MAAM,EAAE;UAAY,CAAE;UAAA,UACpDF;QAAK,GADqDC,GAAG;UAAA;UAAA;UAAA;QAAA,QAIrE;MAAC;QAAA;QAAA;QAAA;MAAA;IACI,iBACH;EAGX;AAEJ;AACA,SAASL,mBAAmB,CAACO,GAAG,EAAEC,GAAG,EAAE;EACnC;EACA,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;AAC5D"},"metadata":{},"sourceType":"module","externalDependencies":[]}