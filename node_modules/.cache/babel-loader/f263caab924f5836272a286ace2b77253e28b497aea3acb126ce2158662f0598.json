{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juni Ramjattan\\\\Desktop\\\\githubIO\\\\demo0one\\\\src\\\\SortingVisualizer\\\\SortingVisualizer.jsx\";\nimport React from 'react';\nimport * as sortingAlgorithms from '../sortingAlgorithms/sortingAlgorithms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n  componentDidMount() {\n    this.generateArray();\n  }\n\n  //Create values for array upon mounting component\n  generateArray() {\n    const array = [];\n    for (let i = 0; i < 55; i++) {\n      array.push(randomNumberInRange(5, 750));\n    }\n    this.setState({\n      array\n    });\n  }\n  quickSort() {}\n  bubbleSort() {\n    // const sortedArray = sortingAlgorithms.bubbleSort(this.state.array);\n    // this.setState({sortedArray});\n\n    const animation = sortingAlgorithms.bubbleSort(this.state.array);\n    const bars = document.getElementsByClassName('array-bar');\n    const barOneStyle = bars.style;\n    const barTwoStyle = bars.style;\n    for (let i = 0; i < animation.length; i++) {\n      console.log(bars);\n      if (i != animation.length - 1) {\n        const barOneStyle = bars[i].style;\n        const barTwoStyle = bars[i + 1].style;\n      } else {\n        const barOneStyle = bars[i].style;\n      }\n      setTimeout(() => {\n        barOneStyle.backgroundColor = 'red';\n        barTwoStyle.backgroundColor = 'red';\n      }, i * 300);\n      barOneStyle.backgroundColor = 'blue';\n      barTwoStyle.backgroundColor = 'blue';\n    }\n  }\n  mergeSort() {}\n  heapSort() {}\n\n  //Manually change sorting method to test\n  testSortAlgorithm() {\n    for (let i = 0; i < 40; i++) {\n      const array = [];\n      for (let i = 0; i < 55; i++) {\n        array.push(randomNumberInRange(5, 750));\n      }\n      //Sorting algorithm array\n      const sortedArray = sortingAlgorithms.bubbleSort(array);\n      //JS sorted array\n      const jsSortedArray = array.sort();\n      console.log(arrayEquals(sortedArray, jsSortedArray));\n    }\n  }\n\n  // For each value in the array map it to a div-array-bar with a key id\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"array-container\",\n      children: [array.map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-bar\",\n        style: {\n          height: `${value}px`\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.generateArray(),\n        children: \"Generate New Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.quickSort(),\n        children: \"Quick Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.bubbleSort(),\n        children: \"Bubble Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.generateArray(),\n        children: \"Merge Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.generateArray(),\n        children: \"Heap Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.testSortAlgorithm(),\n        children: \"Test Algorithm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction randomNumberInRange(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction arrayEquals(arrayOne, arrayTwo) {\n  if (arrayOne.length != arrayTwo.length) {\n    return false;\n  } else {\n    for (let i = 0; i < arrayOne.length; i++) {\n      if (arrayOne[i] != arrayTwo[i]) {\n        return false;\n      }\n    }\n  }\n  return true;\n}","map":{"version":3,"names":["React","sortingAlgorithms","SortingVisualizer","Component","constructor","props","state","array","componentDidMount","generateArray","i","push","randomNumberInRange","setState","quickSort","bubbleSort","animation","bars","document","getElementsByClassName","barOneStyle","style","barTwoStyle","length","console","log","setTimeout","backgroundColor","mergeSort","heapSort","testSortAlgorithm","sortedArray","jsSortedArray","sort","arrayEquals","render","map","value","idx","height","min","max","Math","floor","random","arrayOne","arrayTwo"],"sources":["C:/Users/Juni Ramjattan/Desktop/githubIO/demo0one/src/SortingVisualizer/SortingVisualizer.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nimport * as sortingAlgorithms from '../sortingAlgorithms/sortingAlgorithms';\r\n\r\nexport default class SortingVisualizer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: [],\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.generateArray();\r\n    }\r\n\r\n    //Create values for array upon mounting component\r\n    generateArray(){\r\n        const array = [];\r\n        for(let i=0; i< 55; i++){\r\n            \r\n            array.push(randomNumberInRange(5,750));\r\n        }\r\n        this.setState({array});\r\n    }\r\n\r\n    quickSort(){\r\n        \r\n    }\r\n\r\n    bubbleSort(){\r\n        // const sortedArray = sortingAlgorithms.bubbleSort(this.state.array);\r\n        // this.setState({sortedArray});\r\n\r\n        const animation = sortingAlgorithms.bubbleSort(this.state.array);\r\n        const bars = document.getElementsByClassName('array-bar');\r\n        const barOneStyle = bars.style;\r\n        const barTwoStyle = bars.style;\r\n        for(let i=0; i<animation.length; i++){\r\n            \r\n            console.log(bars);\r\n            if(i != animation.length-1){\r\n                const barOneStyle = bars[i].style;\r\n                const barTwoStyle = bars[i+1].style;\r\n            }else{\r\n                const barOneStyle = bars[i].style;\r\n            }\r\n            setTimeout(() => {\r\n                    barOneStyle.backgroundColor = 'red';\r\n                    barTwoStyle.backgroundColor = 'red';\r\n\r\n                },i*300);\r\n            \r\n            barOneStyle.backgroundColor = 'blue';\r\n            barTwoStyle.backgroundColor = 'blue';\r\n\r\n            \r\n\r\n        }\r\n    }\r\n\r\n    mergeSort(){\r\n\r\n    }\r\n\r\n    heapSort(){\r\n\r\n    }\r\n\r\n    //Manually change sorting method to test\r\n    testSortAlgorithm(){\r\n        for(let i = 0; i<40; i++){\r\n            const array = [];\r\n            for(let i=0; i< 55; i++){\r\n                \r\n                array.push(randomNumberInRange(5,750));\r\n            }\r\n            //Sorting algorithm array\r\n            const sortedArray = sortingAlgorithms.bubbleSort(array);\r\n            //JS sorted array\r\n            const jsSortedArray = array.sort();\r\n            console.log(arrayEquals(sortedArray, jsSortedArray));\r\n            \r\n        }\r\n    \r\n        \r\n    }\r\n\r\n    // For each value in the array map it to a div-array-bar with a key id\r\n    render(){\r\n        const {array} = this.state;\r\n        \r\n        return(\r\n            \r\n            <div className='array-container'>\r\n            {array.map((value, idx) => (\r\n                \r\n                <div className='array-bar' style={{height: `${value}px`}} key={idx}>\r\n                    \r\n                </div>\r\n                \r\n            ))}\r\n            <button onClick={() => this.generateArray()}>Generate New Array</button>\r\n            <button onClick={() => this.quickSort()}>Quick Sort</button>\r\n            <button onClick={() => this.bubbleSort()}>Bubble Sort</button>\r\n            <button onClick={() => this.generateArray()}>Merge Sort</button>\r\n            <button onClick={() => this.generateArray()}>Heap Sort</button>\r\n            <button onClick={() => this.testSortAlgorithm()}>Test Algorithm</button>\r\n            \r\n            </div>\r\n           \r\n        );\r\n       \r\n    }\r\n \r\n}\r\nfunction randomNumberInRange(min, max) {\r\n    \r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\nfunction arrayEquals(arrayOne, arrayTwo){\r\n    if(arrayOne.length != arrayTwo.length){\r\n        return false;\r\n    }else {\r\n        for(let i = 0; i<arrayOne.length; i++){\r\n            if(arrayOne[i] != arrayTwo[i]){\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,KAAKC,iBAAiB,MAAM,wCAAwC;AAAC;AAE5E,eAAe,MAAMC,iBAAiB,SAASF,KAAK,CAACG,SAAS;EAC1DC,WAAW,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE;IACX,CAAC;EACL;EACAC,iBAAiB,GAAE;IACf,IAAI,CAACC,aAAa,EAAE;EACxB;;EAEA;EACAA,aAAa,GAAE;IACX,MAAMF,KAAK,GAAG,EAAE;IAChB,KAAI,IAAIG,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAE,EAAE,EAAEA,CAAC,EAAE,EAAC;MAEpBH,KAAK,CAACI,IAAI,CAACC,mBAAmB,CAAC,CAAC,EAAC,GAAG,CAAC,CAAC;IAC1C;IACA,IAAI,CAACC,QAAQ,CAAC;MAACN;IAAK,CAAC,CAAC;EAC1B;EAEAO,SAAS,GAAE,CAEX;EAEAC,UAAU,GAAE;IACR;IACA;;IAEA,MAAMC,SAAS,GAAGf,iBAAiB,CAACc,UAAU,CAAC,IAAI,CAACT,KAAK,CAACC,KAAK,CAAC;IAChE,MAAMU,IAAI,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,WAAW,CAAC;IACzD,MAAMC,WAAW,GAAGH,IAAI,CAACI,KAAK;IAC9B,MAAMC,WAAW,GAAGL,IAAI,CAACI,KAAK;IAC9B,KAAI,IAAIX,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACM,SAAS,CAACO,MAAM,EAAEb,CAAC,EAAE,EAAC;MAEjCc,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;MACjB,IAAGP,CAAC,IAAIM,SAAS,CAACO,MAAM,GAAC,CAAC,EAAC;QACvB,MAAMH,WAAW,GAAGH,IAAI,CAACP,CAAC,CAAC,CAACW,KAAK;QACjC,MAAMC,WAAW,GAAGL,IAAI,CAACP,CAAC,GAAC,CAAC,CAAC,CAACW,KAAK;MACvC,CAAC,MAAI;QACD,MAAMD,WAAW,GAAGH,IAAI,CAACP,CAAC,CAAC,CAACW,KAAK;MACrC;MACAK,UAAU,CAAC,MAAM;QACTN,WAAW,CAACO,eAAe,GAAG,KAAK;QACnCL,WAAW,CAACK,eAAe,GAAG,KAAK;MAEvC,CAAC,EAACjB,CAAC,GAAC,GAAG,CAAC;MAEZU,WAAW,CAACO,eAAe,GAAG,MAAM;MACpCL,WAAW,CAACK,eAAe,GAAG,MAAM;IAIxC;EACJ;EAEAC,SAAS,GAAE,CAEX;EAEAC,QAAQ,GAAE,CAEV;;EAEA;EACAC,iBAAiB,GAAE;IACf,KAAI,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAC,EAAE,EAAEA,CAAC,EAAE,EAAC;MACrB,MAAMH,KAAK,GAAG,EAAE;MAChB,KAAI,IAAIG,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAE,EAAE,EAAEA,CAAC,EAAE,EAAC;QAEpBH,KAAK,CAACI,IAAI,CAACC,mBAAmB,CAAC,CAAC,EAAC,GAAG,CAAC,CAAC;MAC1C;MACA;MACA,MAAMmB,WAAW,GAAG9B,iBAAiB,CAACc,UAAU,CAACR,KAAK,CAAC;MACvD;MACA,MAAMyB,aAAa,GAAGzB,KAAK,CAAC0B,IAAI,EAAE;MAClCT,OAAO,CAACC,GAAG,CAACS,WAAW,CAACH,WAAW,EAAEC,aAAa,CAAC,CAAC;IAExD;EAGJ;;EAEA;EACAG,MAAM,GAAE;IACJ,MAAM;MAAC5B;IAAK,CAAC,GAAG,IAAI,CAACD,KAAK;IAE1B,oBAEI;MAAK,SAAS,EAAC,iBAAiB;MAAA,WAC/BC,KAAK,CAAC6B,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBAElB;QAAK,SAAS,EAAC,WAAW;QAAC,KAAK,EAAE;UAACC,MAAM,EAAG,GAAEF,KAAM;QAAG;MAAE,GAAMC,GAAG;QAAA;QAAA;QAAA;MAAA,QAIrE,CAAC,eACF;QAAQ,OAAO,EAAE,MAAM,IAAI,CAAC7B,aAAa,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA4B,eACxE;QAAQ,OAAO,EAAE,MAAM,IAAI,CAACK,SAAS,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eAC5D;QAAQ,OAAO,EAAE,MAAM,IAAI,CAACC,UAAU,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,eAC9D;QAAQ,OAAO,EAAE,MAAM,IAAI,CAACN,aAAa,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eAChE;QAAQ,OAAO,EAAE,MAAM,IAAI,CAACA,aAAa,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB,eAC/D;QAAQ,OAAO,EAAE,MAAM,IAAI,CAACqB,iBAAiB,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAwB;IAAA;MAAA;MAAA;MAAA;IAAA,QAElE;EAId;AAEJ;AACA,SAASlB,mBAAmB,CAAC4B,GAAG,EAAEC,GAAG,EAAE;EAEnC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;AAC5D;AACA,SAASN,WAAW,CAACW,QAAQ,EAAEC,QAAQ,EAAC;EACpC,IAAGD,QAAQ,CAACtB,MAAM,IAAIuB,QAAQ,CAACvB,MAAM,EAAC;IAClC,OAAO,KAAK;EAChB,CAAC,MAAK;IACF,KAAI,IAAIb,CAAC,GAAG,CAAC,EAAEA,CAAC,GAACmC,QAAQ,CAACtB,MAAM,EAAEb,CAAC,EAAE,EAAC;MAClC,IAAGmC,QAAQ,CAACnC,CAAC,CAAC,IAAIoC,QAAQ,CAACpC,CAAC,CAAC,EAAC;QAC1B,OAAO,KAAK;MAChB;IACJ;EACJ;EACA,OAAO,IAAI;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}